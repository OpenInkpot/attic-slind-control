#!/bin/sh

set -e

#
# Creates grasp repository on specified host.
#

#
# Repositories config files are read from ~/.sc/repo-<repository> and
# /etc/sc/repo-<repository>. Settings from ~/.sc override settings from /etc/sc
#
# Default repository name is read from ~/.sc/default-repo and
# /etc/sc/default-repo. ~/.sc/default-repo has higher priority.
#
# Each config file is a shell script, which should set the following variables:
#
# REPO_TYPE=ssh (the only type currently supported)
#
# Additional settings for 'ssh' type:
# REPO_SSH_HOST=<host> (optionally in form username@host)
# REPO_SSH_BASE_DIR=<dir> (absolute path)
# 

usage() {
    echo "Usage: sc-init-grasp <name>[@<repository>] [<description>]"
}

CONFIGS="$HOME/.sc sc /etc/sc"

# --- Functions ---

get_default_repo() {
    for f in $CONFIGS; do
        if [ -f $f/default-repo ]; then
            REPO=`cat $f/default-repo`
            return
        fi
    done
}

repo_exists() {
    REPO=$1

    for i in $CONFIGS; do
        [ -f $i/repo-$REPO ] && return
    done
    return 1
}

ssh_init_git() {
    PKGNAME=$1
    DESCRIPTION=$2

    if ssh $REPO_SSH_HOST "test -d $REPO_SSH_BASE_DIR/$PKGNAME.git"; then
        echo "$PKGNAME already exists. Bailing out."
        return 1
    fi

    TMPDIR=sc-init-grasp.$$
    ssh $REPO_SSH_HOST "cd $REPO_SSH_BASE_DIR && (mkdir $TMPDIR && cd $TMPDIR && git-init -q && mv .git ../$PKGNAME.git && cd ../$PKGNAME.git && chmod +x hooks/post-update && echo $DESCRIPTION > description); rm -rf $REPO_SSH_BASE_DIR/$TMPDIR"
}

# --- End of functions ---

if [ $# -gt 2 -o $# -lt 1 ]; then
    usage
    exit 1
fi

PKGNAME=$1
DESCRIPTION=$2

case $PKGNAME in
    *@*)
        REPO=`echo $PKGNAME | cut -d@ -f2-`
        PKGNAME=`echo $PKGNAME | cut -d@ -f1`
        ;;
    *)
        get_default_repo
        if [ -z "$REPO" ]; then
            echo "No default repository is specified. Please fill /etc/sc/default-repo or ~/.sc/default-repo."
            exit 1
        fi
        ;;
esac

if ! repo_exists "$REPO"; then
    echo "Repository $REPO does not exist."
    exit 1
fi

for i in $CONFIGS; do
    [ -f $i/repo-$REPO ] && . $i/repo-$REPO
done

if [ x$REPO_TYPE != xssh ]; then
    echo "Repository type $REPO_TYPE is not implemented"
    exit 1
fi

ssh_init_git "$PKGNAME" "$DESCRIPTION"
